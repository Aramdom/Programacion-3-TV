package TECLADO;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;

public class Teclado1 extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JButton[] buttons;
    private Color originalColor;
    private JTextField textfiel;
    private JLabel palabraLabel;
    private JLabel tiempoLabel;
    private Timer timer;
    private int tiempoTranscurrido;
    private String[] palabras = {"casa", "perro", "gato", "computadora", "libro", "sol", "luna"};
    private int puntaje;

   
    private final String[] teclas = {
            "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P",
            "A", "S", "D", "F", "G", "H", "J", "K", "L",
            "Ã‘", "Z", "X", "C", "V", "B", "N", "M"
    };

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Teclado1 frame = new Teclado1();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public Teclado1() {
        setType(Type.UTILITY);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 600, 500);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

        setContentPane(contentPane);
        contentPane.setLayout(new BorderLayout(0, 0));

        JPanel panel = new JPanel();
        contentPane.add(panel, BorderLayout.SOUTH);
        panel.setLayout(new GridLayout(0, 3, 0, 0));

        JButton btnNewButton_27 = new JButton("ENTER");
        btnNewButton_27.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                checkWord();
            }
        });
        panel.add(btnNewButton_27);

        JButton btnR = new JButton("BORRAR");
        btnR.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String currentText = textfiel.getText();
                if (!currentText.isEmpty()) {
                    textfiel.setText(currentText.substring(0, currentText.length() - 1));
                }
            }
        });
        panel.add(btnR);

        JButton startButton = new JButton("Start");
        startButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                startGame();
            }
        });
        panel.add(startButton);

        JPanel panel_1 = new JPanel();
        panel_1.setBackground(new Color(128, 255, 0));
        contentPane.add(panel_1, BorderLayout.NORTH);
        panel_1.setLayout(new BorderLayout(0, 0));

        palabraLabel = new JLabel();
        palabraLabel.setHorizontalAlignment(SwingConstants.CENTER);
        panel_1.add(palabraLabel, BorderLayout.NORTH);

        tiempoLabel = new JLabel("Tiempo: 0");
        panel_1.add(tiempoLabel, BorderLayout.SOUTH);

        textfiel = new JTextField();
        panel_1.add(textfiel, BorderLayout.CENTER);

        JLabel lblNewLabel_2 = new JLabel("Escriba las palabras que aparecen:");
        panel_1.add(lblNewLabel_2, BorderLayout.WEST);

        JPanel panel_2 = new JPanel();
        contentPane.add(panel_2, BorderLayout.CENTER);
        panel_2.setLayout(new GridLayout(3, 9, 0, 0)); 

        buttons = new JButton[27];

        for (int i = 0; i < 27; i++) {
            buttons[i] = new JButton(teclas[i]); 
            final int index = i;
            buttons[i].addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    JButton btn = (JButton) e.getSource();
                    if (originalColor == null) {
                        originalColor = btn.getBackground();
                    } else {
                        for (JButton button : buttons) {
                            button.setBackground(originalColor);
                        }
                    }
                    btn.setBackground(getRandomColor());
                    textfiel.setText(textfiel.getText() + teclas[index]); 
                }
            });
            panel_2.add(buttons[i]);
            buttons[i].setFocusable(false);
        }

        tiempoTranscurrido = 0;
        timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                tiempoTranscurrido++;
                tiempoLabel.setText("Tiempo: " + tiempoTranscurrido);
            }
        });
    }

    private Color getRandomColor() {
        Color[] colores = {Color.RED, Color.BLUE, Color.GREEN, Color.YELLOW, Color.ORANGE, Color.MAGENTA};
        return colores[(int) (Math.random() * colores.length)];
    }

    private void startGame() {
        puntaje = 0;
        tiempoTranscurrido = 0;
        timer.start();
        mostrarSiguientePalabra();
    }

    private void mostrarSiguientePalabra() {
        int indiceAleatorio = (int) (Math.random() * palabras.length);
        palabraLabel.setText(palabras[indiceAleatorio]);
    }

    private void checkWord() {
        String palabraIngresada = textfiel.getText();
        if (esPalabraValida(palabraIngresada)) {
            puntaje += 10;
            mostrarSiguientePalabra();
        }
    }

    private boolean esPalabraValida(String palabra) {
        for (String palabraValida : palabras) {
            if (palabraValida.equalsIgnoreCase(palabra)) {
                return true;
            }
        }
        return false;
    }
}
